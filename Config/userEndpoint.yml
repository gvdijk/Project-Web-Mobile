info:
 title: Project managing API   
path:
 /user:
  post:
   tags:
    - Users
   summary: create new user
   operationId: user.create
   parameters:
    - name: userName
      schema:
       type: string
       charLimit: 45
    - name: userPass
      schema:
       type: password
       charLimit: 256
   responses:
    '200':
     description: user has been added to the db
 /user/{userID}:
  get:
   tags:
    - Users
   summary: returns 1 user with userID
   operationId: user.get_by_id
   parameters:
    - name: Id
      schema:
       type: integer
       minimum: 0
   responses:
    '200':
     description: returns user found under id
     content:
      schema:
       type: array
       $ref: 'user.yml'
    '404':
     description: no user found under id
 /user/{userID}/project:
  get:
   tags:
    - Projects
   summary: return all projects of user
   operationId: user.get_projects_by_id
   parameters:
    - name: Id
      schema:
       type: integer
       minimum: 0
   responses:
    '200':
     description: returns all projects found under user
     content:
      schema:
       type: array
       $ref: 'project.yml'
    '404':
     description: no user found under id
    '405':
     description: no projects found under user
 /user/{userID}/post:
  get:
   tags:
    - Posts
   summary: Return all posts for a user
   operationId: user.get_posts_by_id
   parameters:
    - name: Id
      schema:
       type: integer
       minimum: 0
   responses:
    '200':
     description: returns all posts found under user
     content:
      schema:
       type: array
       $ref: 'post.yml'
    '404':
     description: no user found under id
    '405':
     description: no posts found under user
 /user/{userID}/comment:
  get:
   tags:
    - Comments
   summary: return all comments for a user
   operationId: user.get_comments_by_id
   parameters:
    - name: Id
      schema:
       type: integer
       minimum: 0
   responses:
    '200':
     description: returns all comments found under user
     content:
      schema:
       type: array
       $ref: 'comment.yml'
    '404':
     description: no user found under id
    '405':
     description: no comments found under user
 /user:
  get:
   tags:
    - Users
   summary: return all users containing userNamePart
   operationId: user.get_by_name
   parameters:
    - name: userNamePart
      schema:
       type: string
       charLimit: 45
   responses:
    '200':
     description: returns all users containing userNamePart
     content:
      schema:
       type: array
       $ref: 'user.yml'
    '404':
     description: no users found containing userNamePart
 /user/{userID}:
  put:
   tags:
    - Users
   summary: update details for user found under id
   operationId: user.put_by_id
   parameters:
    - name: Id
      schema:
       type: integer
       minimum: 0
    - name: userName
      schema:
       type: string
       charLimit: 45
    - name: userPass
      schema:
       type: password
       charLimit: 256
    responses:
     '404':
      description: no user found under id
 /user/{userID):
  delete:
   tags:
    - Users
   summary: Delete user under id from db
   operationId: user.delete_by_id
   parameters:
    - name: Id
      schema:
       type: integer
       minimum: 0
   responses:
    '200':
     description: user has been deleted form the db
    '404':
     description: no user found under id